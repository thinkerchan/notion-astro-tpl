---
import Layout from '../layouts/Layout.astro';
import Comment from '../components/Comment.astro';
import TagItem from '../components/TagItem.astro';
import Copyright from '../components/Copyright.astro';
import Header from '../components/Header.astro';
import PinBadge from '../components/PinBadge.astro';

import { getApps } from '../utils/notion';
import { marked } from 'marked';
import { SITE } from '../config'

const { app } = Astro.props;
const htmlContent = marked(app.content);

export async function getStaticPaths() {
  const apps = await getApps();
  return apps.map(app => ({
    params: { id: app.id },
    props: { app },
  }));
}
---

<Layout title={`${app.title} | ${SITE.author}`}>
  <Header SITE={SITE}/>

  <main class="min-h-screen" style="background-color: rgb(248 250 252);">
    <div class="container mx-auto max-w-6xl px-4 lg:px-6 py-6 sm:py-8">

      <!-- 返回导航 -->
      <div class="mb-6 sm:mb-8">
        <a
          href="/"
          class="inline-flex items-center justify-center w-10 h-10 bg-neutral-100 hover:bg-neutral-200 text-neutral-600 hover:text-neutral-900 transition-all duration-200"
          aria-label="返回首页"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
          </svg>
        </a>
      </div>

      <!-- 项目信息卡片 -->
      <div class="max-w-4xl mx-auto">
        <article class="bg-white border border-neutral-200 p-6 sm:p-8 mb-8 animate-fade-in relative">

          <!-- 精选标识 -->
          <PinBadge isPin={app.isPin} size="md" />

          <!-- 项目头部 -->
          <div class="flex flex-col sm:flex-row items-center sm:items-center gap-4 sm:gap-8 mb-6 sm:mb-8">
            <!-- 图标 -->
            <div class="flex-shrink-0">
              {app.icon ? (
                <img
                  src={app.icon}
                  class="w-24 h-24 sm:w-32 sm:h-32 object-cover rounded-lg"
                  alt={app.title}
                />
              ) : app.emoji ? (
                <div class="w-24 h-24 sm:w-32 sm:h-32 bg-neutral-100 rounded-lg flex items-center justify-center text-4xl sm:text-5xl">
                  {app.emoji}
                </div>
              ) : (
                <img
                  src="/images/avatar.png"
                  class="w-24 h-24 sm:w-32 sm:h-32 object-cover rounded-lg"
                  alt={app.title}
                />
              )}
            </div>

            <!-- 项目信息 -->
            <div class="flex-1">
              <h1 class="text-2xl sm:text-3xl lg:text-4xl font-bold text-neutral-900 leading-tight mb-3 sm:mb-4">
                {app.title}
              </h1>

              <!-- 描述 -->
              <p class="text-sm sm:text-base text-neutral-600 mb-3 sm:mb-4 leading-relaxed">
                {app.desc || '暂无描述'}
              </p>

              <!-- 标签 -->
              {app.tags.length > 0 && (
                <div class="flex flex-wrap gap-2 mb-3 sm:mb-4">
                  {app.tags.map((tag) => (<TagItem tag={tag} />))}
                </div>
              )}

              <!-- 元信息 -->
              <div class="flex flex-wrap items-center gap-4 sm:gap-6 text-xs sm:text-sm text-neutral-500">
                <div class="flex items-center">
                  <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                  </svg>
                  {app.date}
                </div>

                {app.link && (
                  <a
                    href={app.link}
                    class="bg-accent-500 text-white px-4 py-2 font-medium transition-all duration-200 hover:bg-accent-600 focus:outline-none focus:ring-2 focus:ring-accent-500 focus:ring-offset-2 inline-flex items-center text-xs sm:text-sm"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                    </svg>
                    访问项目
                  </a>
                )}
              </div>
            </div>
          </div>

          <!-- 分隔线 -->
          <div class="border-t border-neutral-200 my-6 sm:my-8"></div>

          <!-- 详细内容 -->
          <div class="prose max-w-none">
            {htmlContent ? (
              <div class="markdown-body" set:html={htmlContent}></div>
            ) : (
              <div class="markdown-body" id="Jreadme"></div>
            )}
          </div>

          <!-- 评论区域 -->
          <div class="mt-6 sm:mt-8 pt-6 sm:pt-8 border-t border-neutral-200">
            <div id="Jcomment"></div>
          </div>
        </article>
      </div>

      <Copyright SITE={SITE} />
    </div>
  </main>

  <script type="module" is:inline define:vars={{app}}>
    import { marked } from "/js/marked.esm.js";
    if (!app.content && app.readme && app.readme.startsWith('https://raw.githubusercontent.com/')) {
      fetch(app.readme)
        .then(res => res.text())
        .then(data => {
          let str = data.replace(/^#\s+(?!#).*$/gm, '');
          let html = marked(str);
          document.getElementById('Jreadme').innerHTML = html;
        })
    }
  </script>
  <Comment />
</Layout>