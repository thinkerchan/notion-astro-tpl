---
interface Props {
  id: string;
  title: string;
  description: string;
  icon: string;
  tags: string[];
  emoji: string;
  isPin: boolean;
}

const { id, title, description, icon, tags, emoji, isPin } = Astro.props;
import TagItem from '../components/TagItem.astro';
---

<div class="relative animate-fade-in h-full">
  <a
    href={`/${id}`}
    class="card-clean block p-4 sm:p-6 hover:transform hover:translate-y-[-2px] transition-all duration-200 h-full flex flex-col rounded-none"
  >
    <div class="flex items-start gap-3 sm:gap-4 flex-1">
      <!-- 图标区域 -->
      <div class="flex-shrink-0 relative">
        {icon ? (
          <img
            src={icon}
            class="w-12 h-12 sm:w-16 sm:h-16 object-cover"
            width="64"
            height="64"
            alt={title}
          />
        ) : emoji ? (
          <div class="w-12 h-12 sm:w-16 sm:h-16 bg-neutral-100 flex items-center justify-center text-xl sm:text-2xl">
            {emoji}
          </div>
        ) : (
          <img
            src="/images/avatar.png"
            class="w-12 h-12 sm:w-16 sm:h-16 object-cover"
            width="64"
            height="64"
            alt={title}
          />
        )}

        <!-- 精选标识 -->
        {isPin && (
          <div class="absolute -top-1 -right-1 w-5 h-5 bg-amber-400 rounded-full flex items-center justify-center shadow-sm" title="精选项目">
            <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
            </svg>
          </div>
        )}
      </div>

      <!-- 内容区域 -->
      <div class="flex-1 min-w-0">
        <h2 class="text-base sm:text-lg font-semibold text-neutral-900 line-clamp-2 leading-tight mb-2">
          {title}
        </h2>

        <p class="text-xs sm:text-sm text-neutral-600 mb-3 line-clamp-3 leading-relaxed">
          {description}
        </p>
      </div>
    </div>

    <!-- 标签区域 - 移到底部 -->
    {tags.length > 0 && (
      <div class="flex flex-wrap gap-1 mt-auto pt-2">
        {tags.slice(0, 3).map((tag) => (<TagItem tag={tag} />))}
        {tags.length > 3 && (
          <span class="text-xs text-neutral-400 px-2 py-1">
            +{tags.length - 3}
          </span>
        )}
      </div>
    )}
  </a>
</div>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>